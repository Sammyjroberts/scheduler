# docker-compose.yml
version: "3"

services:
  scheduler:
    build: .
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=tempo:4317
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_TRACES_SAMPLER=always_on
      - OTEL_SERVICE_NAME=scheduler-service
      - ENVIRONMENT=development
      - LOG_LEVEL=debug
      - BATCH_SIZE=512
      - EXPORT_TIMEOUT=5s
    networks:
      - observability
    depends_on:
      tempo:
        condition: service_healthy
  loki:
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/config.yml
    volumes:
      - ./loki-config.yml:/etc/loki/config.yml
      - loki-data:/loki
    networks:
      - observability

  tempo:
    image: grafana/tempo:2.3.0
    command: [ "-config.file=/etc/tempo.yml" ]
    volumes:
      - ./tempo-config.yml:/etc/tempo.yml
      - tempo-data:/tmp/tempo
    ports:
      - "3200:3200" # tempo
      - "4317:4317" # OTLP gRPC
      - "4318:4318" # OTLP HTTP
    networks:
      - observability
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3200/ready" ]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s
  grafana:
    image: grafana/grafana:10.2.0
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-datasource.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - grafana-data:/var/lib/grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    networks:
      - observability
    depends_on:
      - loki
      - tempo

volumes:
  loki-data:
    driver: local
  tempo-data:
    driver: local
  grafana-data:
    driver: local

networks:
  observability:
    driver: bridge
